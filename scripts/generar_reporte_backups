#!/bin/bash

# $Id: generar_reporte_backups,v 1.8 2014-08-23 10:49:43 aosorio Exp $
##
# Script para generar el reporte de backups de una fecha correspondiente.
#
# Consideraciones generales:
# - Se considera backup del día aquel que haya comenzado luego de las 05:00am.
#
# - Los reportes son enviados al directorio especificado en la variable
#   dir_reportes.
#   

version='1.3'
dir_reportes=/var/backups/reportes_de_backups
bacula_dir=bacula-dir.terminalquequen.com.ar

[ -d "$dir_reportes" ] || mkdir "$dir_reportes"

function help {
  cat <<FFAA

Script para generar el reporte de backup.

Modo de uso:

	$0 <fecha_de_backup_1> ... <fecha_de_backup_n>

	El formato de la fecha de backup es aaaa-mm-dd. Por ejemplo: 2011-12-31.

FFAA

}

function reporte {

  fecha="$1"

  fecha_desde=$( date --date="$fecha 05:00:00" '+%F %T' )
  fecha_hasta=$( date --date="$fecha + 1 day 5 hours" '+%F %T' )

  sql_condition="
WHERE starttime BETWEEN '$fecha_desde' AND '$fecha_hasta' AND
      name<>'notux'"

  sql_query="
SELECT pg_size_pretty(sum(jobbytes)::bigint) as size
  FROM job
  $sql_condition;"

  size=$( ssh $bacula_dir "echo \"$sql_query\" | psql -A -U bacula | \
              head -n 2 | tail -n 1" )

  cat <<FFAA
<html>

  <head>
    <title>Reporte diario de backup - ver $version</title>
  </head>

  <body>
    <p align="center">
      <font size=4>
        <b><u>Reporte diario de backup (versi&oacute;n $version)</u></b>
        <br><br>
      </font>

      <font size=2>
        <table align="center">
          <tr><td><font size=1>Fecha de backup:</font></td>
              <td><font size=1><b>$fecha</b></font></td></tr>
          <tr><td><font size=1>Tama&ntilde;o total:</font></td>
              <td><font size=1><b>$size</b></font></td></tr>
        </table>
      </font>
    </p>

    <table align="center" width="100%" border="1">
      <tr align="center" size=2>
        <td><font size=2><b>Nombre</b></font></td>
        <td><font size=2><b>ID</b></font></td>
        <td><font size=2><b>Nivel</b></font></td>
        <td><font size=2><b>Inicio</b></font></td>
        <td><font size=2><b>Resultado</b></font></td>
        <td><font size=2><b>Archivos</b></font></td>
        <td><font size=2><b>Tama&ntilde;o</b></font></td>
        <td><font size=2><b>Incidente</b></font></td>
      </tr>
FFAA

  sql_query=$( cat <<FFAA
SELECT name AS nombre,
       jobid,
       CASE
         WHEN level = 'F'
           THEN 'Full'::text
         WHEN level = 'D'
           THEN 'Diferencial'::text
         WHEN level = 'I'
           THEN 'Incremental'::text
         ELSE level::text
       END as nivel,
       starttime::time as inicio,
       CASE
         WHEN jobstatus = 'T'
           THEN 'OK'::text
         WHEN jobstatus = 'E' OR jobstatus = 'f'
           THEN 'ERROR'::text
         WHEN jobstatus = 'A'
           THEN 'CANCELADO'::text
         ELSE 'DESCONOCIDO'::text
       END as terminacion,
       jobfiles as archivos,
       pg_size_pretty(jobbytes::bigint) as tamaño,
       ' '::text as incidente
  FROM job
  $sql_condition
  ORDER BY starttime;
FFAA
)

  tmp_file=$( mktemp /tmp/XXXXX )

  ssh $bacula_dir "echo \"$sql_query\" | psql -A -U bacula" > $tmp_file

  [ $? -eq 0 ] || return 1

  cat $tmp_file | head -n -1 | tail -n +2 | \
    sed -e 's/^/<tr><td><font size=1>/g' \
        -e 's/|/<\/font><\/td><td><font size=1>/g' \
        -e 's/$/<\/font><\/td><\/tr>/g'

  rm -f $tmp_file

  cat <<FFAA
    </table>

    <br><br><br>

    <p>
      <font size=3>
        <b>Operador de backup:</b> ........................................</p>
        <br><br><br>
        <b>Jefe de Sistemas:</b>   ........................................</p>
      </font>
    </p>

  </body>

</html>
FFAA
  return 0
}

[ $# -eq 0 ] && help && exit 1

[ $# -eq 2 ] && {
  fecha_desde=$1
  fecha_hasta=$2

  reportes="$fecha_desde"

  while [ "$fecha_desde" != "$fecha_hasta" ] ; do
    fecha_desde=$( date --date="$fecha_desde +1 day" '+%F' )
    reportes="$reportes $fecha_desde"
  done

} || {
  reportes="$@"
}

for i in $reportes ; do
  echo -e "\nGenerando reporte del $i..."

  [ -z "$( echo $i | \
           sed -ne 's/^[0-9]\{4\}\-[0-9]\{1,2\}\-[0-9]\{1,2\}$/x/p' )" ] && {
    echo -e "Formato de fecha incorrecto\n"
    help
    exit 1
  }

  reporte "$i" > "$dir_reportes/$i.html" && \
  ln -sf "$dir_reportes/$i.html" "/var/www/sistemas_html/reportes_de_backup/$i.html"

  [ $? -eq 0 ] && {
    echo -e "Reporte del $i generado exitosamente\n"
  } || {
    echo -e "¡¡¡No se pudo generar el reporte del $i!!!\n"
  }

done

echo -e "Ingrese en http://sistemas/reportes_de_backup para visualizar"
echo -e "los reportes generados.\n\n"
